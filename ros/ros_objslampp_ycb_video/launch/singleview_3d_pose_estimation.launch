<launch>

  <arg name="OCCUPANCY" default="false" />

  <arg name="NAMESPACE" value="/camera/with_occupancy" if="$(arg OCCUPANCY)" />
  <arg name="NAMESPACE" value="/camera/without_occupancy" unless="$(arg OCCUPANCY)" />

  <group ns="$(arg NAMESPACE)">

    <node name="singleview_3d_pose_estimation"
          pkg="ros_objslampp_ycb_video" type="singleview_3d_pose_estimation.py"
          clear_params="true"
          output="screen">
      <remap from="~input/camera_info" to="/camera/color/camera_info" />
      <remap from="~input/rgb" to="/camera/color/image_rect_color" />
      <remap from="~input/depth" to="/camera/aligned_depth_to_color/image_raw" />
      <remap from="~input/label_ins" to="/camera/mask_rcnn_instance_segmentation/output/label_ins" />
      <remap from="~input/class" to="/camera/mask_rcnn_instance_segmentation/output/class" />
      <remap from="~input/grids_noentry" to="/camera/octomap_server/output/grids_noentry" if="$(arg OCCUPANCY)" />
      <rosparam subst_value="true">
        with_occupancy: $(arg OCCUPANCY)
      </rosparam>
    </node>
    <node name="object_poses_to_markers"
          pkg="ros_objslampp_ycb_video" type="object_poses_to_markers.py"
          clear_params="true">
      <remap from="~input" to="singleview_3d_pose_estimation/output" />
    </node>
    <node name="render_marker_array"
          pkg="ros_objslampp_ycb_video" type="render_marker_array.py"
          clear_params="true">
      <remap from="~input/camera_info" to="/camera/color/camera_info" />
      <remap from="~input/markers" to="object_poses_to_markers/output" />
    </node>
    <group ns="render_marker_array">
      <node name="tile_image"
            pkg="jsk_perception" type="tile_image.py"
            clear_params="true">
        <rosparam subst_value="true">
          input_topics:
            - /camera/color/image_rect_color_throttle/output
            - output
          queue_size: 100
          approximate_sync: true
        </rosparam>
      </node>
    </group>

    <group if="$(arg OCCUPANCY)">
      <node name="collision_based_pose_refinement"
            pkg="ros_objslampp_ycb_video" type="collision_based_pose_refinement.py"
            clear_params="true"
            output="screen">
        <remap from="~input/poses" to="singleview_3d_pose_estimation/output" />
        <remap from="~input/grids" to="/camera/octomap_server/output/grids" />
        <remap from="~input/grids_noentry" to="/camera/octomap_server/output/grids_noentry" />
      </node>
      <group ns="collision_based_pose_refinement">
        <node name="object_poses_to_markers"
              pkg="ros_objslampp_ycb_video" type="object_poses_to_markers.py"
              clear_params="true">
          <remap from="~input" to="output" />
        </node>
        <node name="render_marker_array"
              pkg="ros_objslampp_ycb_video" type="render_marker_array.py"
              clear_params="true">
          <remap from="~input/camera_info" to="/camera/color/camera_info" />
          <remap from="~input/markers" to="object_poses_to_markers/output" />
        </node>
        <group ns="render_marker_array">
          <node name="tile_image"
                pkg="jsk_perception" type="tile_image.py"
                clear_params="true">
            <rosparam subst_value="true">
              input_topics:
                - /camera/color/image_rect_color_throttle/output
                - output
              queue_size: 100
              approximate_sync: true
            </rosparam>
          </node>
        </group>
      </group>
    </group>

  </group>

</launch>
